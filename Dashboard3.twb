<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0427.1803                               -->
<workbook original-version='18.1' source-build='2020.1.3 (20201.20.0427.1803)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='What&apos;s Your Loan Amount? ($)' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20000'>
        <calculation class='tableau' formula='20000' />
        <range max='10000000' min='1' />
      </column>
      <column caption='What&apos;s Your Loan Term? (Year)' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
        <calculation class='tableau' formula='30' />
        <desc>
          <formatted-text>
            <run>Loan Term</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='What&apos;s Your Loan Rate? (%)' datatype='real' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='4.5'>
        <calculation class='tableau' formula='4.5' />
        <range granularity='0.01' max='10.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (Data)' inline='true' name='federated.103wpvg1v2xw5a0zsb872043zro0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Months' name='excel-direct.0y3gnwe0zd2cq319fhmub0i40kd5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/elianna/Documents/GWU/OutsideOfTheClass/Internship/Dashboard/Mortgage Calculator/Months.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0y3gnwe0zd2cq319fhmub0i40kd5' name='Month' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:A601:no:A1:A601:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Month]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Month]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A601:no:A1:A601:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Monthly Payment In Total Discrepency' datatype='real' name='[Calculation_207447105208877066]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([Monthly Payment (Equal Payment) (copy)_207447105207947271] - [Monthly Payment (Equal Principal) (copy)_207447105208303624])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Loan Amount' datatype='integer' name='[Calculation_63894866693644295]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Loan Rate' datatype='real' name='[Calculation_63894866693980168]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
      </column>
      <column caption='Loan Term' datatype='integer' name='[Calculation_63894866694086665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='Month' datatype='real' name='[Calculation_63894866767106062]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;loanterm = _arg1&#10;month = []&#10;for i in range(0, len(_arg1)):&#10;    month.append(i)&#10;return month&#10;&quot;,&#10;ATTR([Calculation_63894866694086665]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Loan To Pay (Equal Payment)' datatype='real' name='[Calculation_63894866796060690]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;Money_2_Pay = []&#10;&#10;for i in range(0, len(int)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    balance = loan[i] * (((1+monthlyint)**totalmonth) - ((1+monthlyint)**i))/(((1+monthlyint)**totalmonth) - 1)&#10;    Money_2_Pay.append(balance)&#10;return Money_2_Pay&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Month Equals to Loan Term' datatype='boolean' name='[Calculation_773704389359108098]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Year] &lt;= [Parameters].[Parameter 3]*12' />
      </column>
      <column caption='Monthly Payment Discrepency' datatype='real' name='[Calculation_773704389391724551]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Monthly Payment (Equal Payment) (copy)_773704389368582150] - [Monthly Payment (copy)_63894866798395411]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Interest To Pay (Equal Principal)' datatype='real' name='[Interest To Pay (Equal Payment) (copy)_773704389367201797]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;Interest_2_Pay = []&#10;&#10;for i in range(0, len(int)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    balance = principal * (len(int) - i)&#10;    interest = balance * monthlyint&#10;    Interest_2_Pay.append(interest)&#10;return Interest_2_Pay&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Principal To Pay (Equal Payment)' datatype='real' name='[Interest To Pay (copy)_63894866806349845]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;Principal_2_Pay = []&#10;&#10;for i in range(0, len(int)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    pmt = (loan[i]*monthlyint) / (1 - ((1+monthlyint)**(-totalmonth)))&#10;    balance = loan[i] * ((1+monthlyint)**totalmonth - (1+monthlyint)**i)/((1+monthlyint)**totalmonth - 1)&#10;    interest = balance * monthlyint&#10;    principal = pmt - interest&#10;    Principal_2_Pay.append(principal)&#10;return Principal_2_Pay&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Interest To Pay (Equal Payment)' datatype='real' name='[Loan To Pay (copy)_63894866805657620]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;Interest_2_Pay = []&#10;&#10;for i in range(0, len(int)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    balance = loan[i] * ((1+monthlyint)**totalmonth - (1+monthlyint)**i)/((1+monthlyint)**totalmonth - 1)&#10;    interest = balance * monthlyint&#10;    Interest_2_Pay.append(interest)&#10;return Interest_2_Pay&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Monthly Payment In Total (Equal Payment)' datatype='real' name='[Monthly Payment (Equal Payment) (copy)_207447105207947271]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    pmt = (loan[i]*monthlyint) / (1 - ((1+monthlyint)**(-totalmonth)))&#10;    monthlypmt.append(pmt)&#10;return np.sum(monthlypmt)&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Monthly Payment (Equal Principal)' datatype='real' name='[Monthly Payment (Equal Payment) (copy)_773704389368582150]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    balance = principal * (len(int) - i)&#10;    interest = balance * monthlyint&#10;    pmt = interest + principal&#10;    monthlypmt.append(pmt)&#10;return monthlypmt&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption=')' datatype='real' name='[Monthly Payment (Equal Principal) (copy) (copy)_207447105208320009]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    balance = principal * (len(int) - i)&#10;    interest = balance * monthlyint&#10;    pmt = interest + principal&#10;    monthlypmt.append(pmt)&#10;return monthlypmt&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Monthly Payment In Total (Equal Principal)' datatype='real' name='[Monthly Payment (Equal Principal) (copy)_207447105208303624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    balance = principal * (len(int) - i)&#10;    interest = balance * monthlyint&#10;    pmt = interest + principal&#10;    monthlypmt.append(pmt)&#10;return np.sum(monthlypmt)&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Monthly Payment (Equal Payment)' datatype='real' name='[Monthly Payment (copy)_63894866798395411]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    pmt = (loan[i]*monthlyint) / (1 - ((1+monthlyint)**(-totalmonth)))&#10;    monthlypmt.append(pmt)&#10;return monthlypmt&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Principal To Pay (Equal Principal)' datatype='real' name='[Principal To Pay (Equal Payment) (copy)_773704389365133315]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;Principal_2_Pay = []&#10;&#10;for i in range(0, len(int)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    Principal_2_Pay.append(principal)&#10;return Principal_2_Pay&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Months' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_63894866693644295]' derivation='Sum' name='[sum:Calculation_63894866693644295:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_63894866693980168]' derivation='Sum' name='[sum:Calculation_63894866693980168:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_63894866694086665]' derivation='Sum' name='[sum:Calculation_63894866694086665:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_207447105208877066]' derivation='User' name='[usr:Calculation_207447105208877066:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (Equal Principal) (copy)_207447105208303624]' ordering-type='Rows' />
        <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (Equal Payment) (copy)_207447105207947271]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_63894866767106062]' derivation='User' name='[usr:Calculation_63894866767106062:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_63894866796060690]' derivation='User' name='[usr:Calculation_63894866796060690:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_773704389391724551]' derivation='User' name='[usr:Calculation_773704389391724551:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (Equal Payment) (copy)_773704389368582150]' ordering-type='Rows' />
        <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (copy)_63894866798395411]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Interest To Pay (Equal Payment) (copy)_773704389367201797]' derivation='User' name='[usr:Interest To Pay (Equal Payment) (copy)_773704389367201797:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Interest To Pay (copy)_63894866806349845]' derivation='User' name='[usr:Interest To Pay (copy)_63894866806349845:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Loan To Pay (copy)_63894866805657620]' derivation='User' name='[usr:Loan To Pay (copy)_63894866805657620:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Monthly Payment (Equal Payment) (copy)_207447105207947271]' derivation='User' name='[usr:Monthly Payment (Equal Payment) (copy)_207447105207947271:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Monthly Payment (Equal Payment) (copy)_773704389368582150]' derivation='User' name='[usr:Monthly Payment (Equal Payment) (copy)_773704389368582150:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Monthly Payment (Equal Principal) (copy)_207447105208303624]' derivation='User' name='[usr:Monthly Payment (Equal Principal) (copy)_207447105208303624:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Monthly Payment (copy)_63894866798395411]' derivation='User' name='[usr:Monthly Payment (copy)_63894866798395411:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Principal To Pay (Equal Payment) (copy)_773704389365133315]' derivation='User' name='[usr:Principal To Pay (Equal Payment) (copy)_773704389365133315:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.239669' measure-ordering='alphabetic' measure-percentage='0.57686' parameter-percentage='0.183471' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Payment) (copy)_207447105207947271:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_207447105208877066:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Principal) (copy)_207447105208303624:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_207447105188519936:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Interest To Pay (Equal Payment) (copy)_773704389367201797:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Loan To Pay (copy)_63894866805657620:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_207447105194545155:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[sum:Calculation_63894866693980168:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[sum:Calculation_63894866694086665:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_773704389391724551:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_63894866796060690:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_207447105208877066:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (copy)_63894866798395411:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Payment) (copy)_773704389368582150:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_63894866767106062:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Interest To Pay (copy)_63894866806349845:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Principal) (copy)_207447105208303624:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:NPV (Equal Payment) (copy)_207447105206042630:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Principal To Pay (Equal Payment) (copy)_773704389365133315:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Payment) (copy)_207447105207947271:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[sum:Calculation_63894866693644295:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='What&apos;s Your Loan Amount? ($)' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20000'>
          <calculation class='tableau' formula='20000' />
          <range max='10000000' min='1' />
        </column>
        <column caption='What&apos;s Your Loan Term? (Year)' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
          <calculation class='tableau' formula='30' />
          <desc>
            <formatted-text>
              <run>Loan Term</run>
            </formatted-text>
          </desc>
        </column>
        <column caption='What&apos;s Your Loan Rate? (%)' datatype='real' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='4.5'>
          <calculation class='tableau' formula='4.5' />
          <range granularity='0.01' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet1 (Months)' inline='true' name='federated.1ywo5p319l0dts1dj8cyx0fu2314' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Months' name='excel-direct.024lles07zozn71a7yxj31c0pouw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/elianna/Documents/GWU/OutsideOfTheClass/Internship/Dashboard/Mortgage Calculator/Months.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.024lles07zozn71a7yxj31c0pouw' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:A601:no:A1:A601:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A601:no:A1:A601:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.321725' measure-ordering='alphabetic' measure-percentage='0.321725' parameter-percentage='0.356551' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Equal Principal Payment'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Equal Total Principal</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data)' name='federated.103wpvg1v2xw5a0zsb872043zro0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='What&apos;s Your Loan Amount? ($)' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20000'>
              <calculation class='tableau' formula='20000' />
              <range max='10000000' min='1' />
            </column>
            <column caption='What&apos;s Your Loan Term? (Year)' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <desc>
                <formatted-text>
                  <run>Loan Term</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='What&apos;s Your Loan Rate? (%)' datatype='real' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='4.5'>
              <calculation class='tableau' formula='4.5' />
              <range granularity='0.01' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.103wpvg1v2xw5a0zsb872043zro0'>
            <column caption='Loan Amount' datatype='integer' name='[Calculation_63894866693644295]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Loan Rate' datatype='real' name='[Calculation_63894866693980168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
            </column>
            <column caption='Loan Term' datatype='integer' name='[Calculation_63894866694086665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
            </column>
            <column caption='Month Equals to Loan Term' datatype='boolean' name='[Calculation_773704389359108098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] &lt;= [Parameters].[Parameter 3]*12' />
            </column>
            <column caption='Interest To Pay (Equal Principal)' datatype='real' name='[Interest To Pay (Equal Payment) (copy)_773704389367201797]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;Interest_2_Pay = []&#10;&#10;for i in range(0, len(int)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    balance = principal * (len(int) - i)&#10;    interest = balance * monthlyint&#10;    Interest_2_Pay.append(interest)&#10;return Interest_2_Pay&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Monthly Payment (Equal Principal)' datatype='real' name='[Monthly Payment (Equal Payment) (copy)_773704389368582150]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    balance = principal * (len(int) - i)&#10;    interest = balance * monthlyint&#10;    pmt = interest + principal&#10;    monthlypmt.append(pmt)&#10;return monthlypmt&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Principal To Pay (Equal Principal)' datatype='real' name='[Principal To Pay (Equal Payment) (copy)_773704389365133315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;Principal_2_Pay = []&#10;&#10;for i in range(0, len(int)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    Principal_2_Pay.append(principal)&#10;return Principal_2_Pay&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Months' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_773704389359108098]' derivation='None' name='[none:Calculation_773704389359108098:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interest To Pay (Equal Payment) (copy)_773704389367201797]' derivation='User' name='[usr:Interest To Pay (Equal Payment) (copy)_773704389367201797:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Monthly Payment (Equal Payment) (copy)_773704389368582150]' derivation='User' name='[usr:Monthly Payment (Equal Payment) (copy)_773704389368582150:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Principal To Pay (Equal Payment) (copy)_773704389365133315]' derivation='User' name='[usr:Principal To Pay (Equal Payment) (copy)_773704389365133315:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Interest To Pay (Equal Payment) (copy)_773704389367201797:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Payment) (copy)_773704389368582150:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Principal To Pay (Equal Payment) (copy)_773704389365133315:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389359108098:nk]'>
            <groupfilter function='member' level='[none:Calculation_773704389359108098:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]</column>
            <column>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389359108098:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#fafafa72' />
            <format attr='body-type' id='annotation_0' value='edge' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='stroke-size' id='annotation_0' value='2' />
            <format attr='border-width' id='annotation_0' value='2' />
            <format attr='line-end' id='annotation_0' value='arrow' />
            <format attr='line-end-size' id='annotation_0' value='small' />
            <format attr='border-color' id='annotation_0' value='#e15759' />
            <format attr='stroke-color' id='annotation_0' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.103wpvg1v2xw5a0zsb872043zro0].[Multiple Values]</rows>
        <cols>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='210'>
            <formatted-text>
              <run bold='true' fontsize='11'>Monthly Payment: $&lt;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Payment) (copy)_773704389368582150:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run bold='true' fontsize='11'>Month: &lt;[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]&gt;th month</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</field>
                      <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]</field>
                      <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>110</value>
                    <value>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Payment) (copy)_773704389368582150:qk]&quot;</value>
                    <value>575.83333333333326</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='178' y='-29' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{885A667B-0CC5-48DE-A9E2-A563E4DF6C95}' />
    </worksheet>
    <worksheet name='Equal Total Payment'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Equal Total Payment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data)' name='federated.103wpvg1v2xw5a0zsb872043zro0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='What&apos;s Your Loan Amount? ($)' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20000'>
              <calculation class='tableau' formula='20000' />
              <range max='10000000' min='1' />
            </column>
            <column caption='What&apos;s Your Loan Term? (Year)' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <desc>
                <formatted-text>
                  <run>Loan Term</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='What&apos;s Your Loan Rate? (%)' datatype='real' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='4.5'>
              <calculation class='tableau' formula='4.5' />
              <range granularity='0.01' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.103wpvg1v2xw5a0zsb872043zro0'>
            <column caption='Loan Amount' datatype='integer' name='[Calculation_63894866693644295]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Loan Rate' datatype='real' name='[Calculation_63894866693980168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
            </column>
            <column caption='Loan Term' datatype='integer' name='[Calculation_63894866694086665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
            </column>
            <column caption='Month Equals to Loan Term' datatype='boolean' name='[Calculation_773704389359108098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] &lt;= [Parameters].[Parameter 3]*12' />
            </column>
            <column caption='Principal To Pay (Equal Payment)' datatype='real' name='[Interest To Pay (copy)_63894866806349845]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;Principal_2_Pay = []&#10;&#10;for i in range(0, len(int)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    pmt = (loan[i]*monthlyint) / (1 - ((1+monthlyint)**(-totalmonth)))&#10;    balance = loan[i] * ((1+monthlyint)**totalmonth - (1+monthlyint)**i)/((1+monthlyint)**totalmonth - 1)&#10;    interest = balance * monthlyint&#10;    principal = pmt - interest&#10;    Principal_2_Pay.append(principal)&#10;return Principal_2_Pay&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Interest To Pay (Equal Payment)' datatype='real' name='[Loan To Pay (copy)_63894866805657620]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;Interest_2_Pay = []&#10;&#10;for i in range(0, len(int)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    balance = loan[i] * ((1+monthlyint)**totalmonth - (1+monthlyint)**i)/((1+monthlyint)**totalmonth - 1)&#10;    interest = balance * monthlyint&#10;    Interest_2_Pay.append(interest)&#10;return Interest_2_Pay&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Monthly Payment (Equal Payment)' datatype='real' name='[Monthly Payment (copy)_63894866798395411]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    pmt = (loan[i]*monthlyint) / (1 - ((1+monthlyint)**(-totalmonth)))&#10;    monthlypmt.append(pmt)&#10;return monthlypmt&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Months' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_773704389359108098]' derivation='None' name='[none:Calculation_773704389359108098:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interest To Pay (copy)_63894866806349845]' derivation='User' name='[usr:Interest To Pay (copy)_63894866806349845:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Loan To Pay (copy)_63894866805657620]' derivation='User' name='[usr:Loan To Pay (copy)_63894866805657620:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Monthly Payment (copy)_63894866798395411]' derivation='User' name='[usr:Monthly Payment (copy)_63894866798395411:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Loan To Pay (copy)_63894866805657620:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (copy)_63894866798395411:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Interest To Pay (copy)_63894866806349845:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389359108098:nk]'>
            <groupfilter function='member' level='[none:Calculation_773704389359108098:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]</column>
            <column>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389359108098:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' value='Measure Names' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_2' value='#fafafa56' />
            <format attr='body-type' id='annotation_2' value='edge' />
            <format attr='stroke-color' id='annotation_2' value='#e15759' />
            <format attr='stroke-size' id='annotation_2' value='2' />
            <format attr='line-end' id='annotation_2' value='arrow' />
            <format attr='border-color' id='annotation_2' value='#e15759' />
            <format attr='border-style' id='annotation_2' value='solid' />
            <format attr='border-width' id='annotation_2' value='2' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='background-color' value='#00000000' />
            <format attr='font-size' value='20' />
            <format attr='color' value='#1b1b1b' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane id='35' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.103wpvg1v2xw5a0zsb872043zro0].[Multiple Values]</rows>
        <cols>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='206'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='11'>Monthly Payment: $&lt;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (copy)_63894866798395411:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#000000' fontsize='11'>Month: &lt;[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]&gt;th month</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</field>
                      <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]</field>
                      <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>110</value>
                    <value>&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (copy)_63894866798395411:qk]&quot;</value>
                    <value>599.5505251527569</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='305' y='20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{909ECAED-7F45-4BCB-AF10-FC3A59065DD5}' />
    </worksheet>
    <worksheet name='Monthly Discrepency'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>Total Discrepency</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data)' name='federated.103wpvg1v2xw5a0zsb872043zro0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='What&apos;s Your Loan Amount? ($)' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20000'>
              <calculation class='tableau' formula='20000' />
              <range max='10000000' min='1' />
            </column>
            <column caption='What&apos;s Your Loan Term? (Year)' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <desc>
                <formatted-text>
                  <run>Loan Term</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='What&apos;s Your Loan Rate? (%)' datatype='real' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='4.5'>
              <calculation class='tableau' formula='4.5' />
              <range granularity='0.01' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.103wpvg1v2xw5a0zsb872043zro0'>
            <column caption='Monthly Payment In Total Discrepency' datatype='real' name='[Calculation_207447105208877066]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Monthly Payment (Equal Payment) (copy)_207447105207947271] - [Monthly Payment (Equal Principal) (copy)_207447105208303624])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Loan Amount' datatype='integer' name='[Calculation_63894866693644295]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Loan Rate' datatype='real' name='[Calculation_63894866693980168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
            </column>
            <column caption='Loan Term' datatype='integer' name='[Calculation_63894866694086665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
            </column>
            <column caption='Month Equals to Loan Term' datatype='boolean' name='[Calculation_773704389359108098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] &lt;= [Parameters].[Parameter 3]*12' />
            </column>
            <column caption='Monthly Payment In Total (Equal Payment)' datatype='real' name='[Monthly Payment (Equal Payment) (copy)_207447105207947271]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    pmt = (loan[i]*monthlyint) / (1 - ((1+monthlyint)**(-totalmonth)))&#10;    monthlypmt.append(pmt)&#10;return np.sum(monthlypmt)&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Monthly Payment In Total (Equal Principal)' datatype='real' name='[Monthly Payment (Equal Principal) (copy)_207447105208303624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    balance = principal * (len(int) - i)&#10;    interest = balance * monthlyint&#10;    pmt = interest + principal&#10;    monthlypmt.append(pmt)&#10;return np.sum(monthlypmt)&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Months' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_773704389359108098]' derivation='None' name='[none:Calculation_773704389359108098:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_207447105208877066]' derivation='User' name='[usr:Calculation_207447105208877066:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (Equal Principal) (copy)_207447105208303624]' ordering-type='Rows' />
              <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (Equal Payment) (copy)_207447105207947271]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389359108098:nk]'>
            <groupfilter function='member' level='[none:Calculation_773704389359108098:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389359108098:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='15' />
            <format attr='font-size' data-class='total' value='24' />
            <format attr='font-size' data-class='subtotal' value='20' />
            <format attr='width' value='147' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#ffbe7d' />
            <format attr='color' data-class='total' value='#000000' />
            <format attr='font-size' data-class='total' value='14' />
            <format attr='font-size' data-class='subtotal' value='15' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='24' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='24' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#f28e2b' />
            <format attr='font-size' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane id='21' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_207447105208877066:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{62D95B91-A227-46E6-9B62-A6D2A354CFF4}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data)' name='federated.103wpvg1v2xw5a0zsb872043zro0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='What&apos;s Your Loan Amount? ($)' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20000'>
              <calculation class='tableau' formula='20000' />
              <range max='10000000' min='1' />
            </column>
            <column caption='What&apos;s Your Loan Term? (Year)' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <desc>
                <formatted-text>
                  <run>Loan Term</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='What&apos;s Your Loan Rate? (%)' datatype='real' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='4.5'>
              <calculation class='tableau' formula='4.5' />
              <range granularity='0.01' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.103wpvg1v2xw5a0zsb872043zro0'>
            <column caption='Monthly Payment In Total Discrepency' datatype='real' name='[Calculation_207447105208877066]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Monthly Payment (Equal Payment) (copy)_207447105207947271] - [Monthly Payment (Equal Principal) (copy)_207447105208303624])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Loan Amount' datatype='integer' name='[Calculation_63894866693644295]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Loan Rate' datatype='real' name='[Calculation_63894866693980168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
            </column>
            <column caption='Loan Term' datatype='integer' name='[Calculation_63894866694086665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
            </column>
            <column caption='Monthly Payment In Total (Equal Payment)' datatype='real' name='[Monthly Payment (Equal Payment) (copy)_207447105207947271]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    pmt = (loan[i]*monthlyint) / (1 - ((1+monthlyint)**(-totalmonth)))&#10;    monthlypmt.append(pmt)&#10;return np.sum(monthlypmt)&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Monthly Payment In Total (Equal Principal)' datatype='real' name='[Monthly Payment (Equal Principal) (copy)_207447105208303624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    balance = principal * (len(int) - i)&#10;    interest = balance * monthlyint&#10;    pmt = interest + principal&#10;    monthlypmt.append(pmt)&#10;return np.sum(monthlypmt)&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Months' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_207447105208877066]' derivation='User' name='[usr:Calculation_207447105208877066:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (Equal Principal) (copy)_207447105208303624]' ordering-type='Rows' />
              <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (Equal Payment) (copy)_207447105207947271]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_207447105208877066:qk]</rows>
        <cols>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{D0A3D6CC-8C90-415C-994F-932811063AB3}' />
    </worksheet>
    <worksheet name='Total Payment Discrepency'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data)' name='federated.103wpvg1v2xw5a0zsb872043zro0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='What&apos;s Your Loan Amount? ($)' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20000'>
              <calculation class='tableau' formula='20000' />
              <range max='10000000' min='1' />
            </column>
            <column caption='What&apos;s Your Loan Term? (Year)' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
              <calculation class='tableau' formula='30' />
              <desc>
                <formatted-text>
                  <run>Loan Term</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='What&apos;s Your Loan Rate? (%)' datatype='real' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='4.5'>
              <calculation class='tableau' formula='4.5' />
              <range granularity='0.01' max='10.0' min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.103wpvg1v2xw5a0zsb872043zro0'>
            <column caption='Monthly Payment In Total Discrepency' datatype='real' name='[Calculation_207447105208877066]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([Monthly Payment (Equal Payment) (copy)_207447105207947271] - [Monthly Payment (Equal Principal) (copy)_207447105208303624])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Loan Amount' datatype='integer' name='[Calculation_63894866693644295]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Loan Rate' datatype='real' name='[Calculation_63894866693980168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
            </column>
            <column caption='Loan Term' datatype='integer' name='[Calculation_63894866694086665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
            </column>
            <column caption='Monthly Payment In Total (Equal Payment)' datatype='real' name='[Monthly Payment (Equal Payment) (copy)_207447105207947271]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    pmt = (loan[i]*monthlyint) / (1 - ((1+monthlyint)**(-totalmonth)))&#10;    monthlypmt.append(pmt)&#10;return np.sum(monthlypmt)&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Monthly Payment In Total (Equal Principal)' datatype='real' name='[Monthly Payment (Equal Principal) (copy)_207447105208303624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;int = _arg1&#10;loanterm = _arg2&#10;loan = _arg3&#10;monthlypmt = []&#10;for i in range(0, len(_arg1)):&#10;    monthlyint = int[i]/1200&#10;    totalmonth = loanterm[i]*12&#10;    principal = loan[i]/len(int)&#10;    balance = principal * (len(int) - i)&#10;    interest = balance * monthlyint&#10;    pmt = interest + principal&#10;    monthlypmt.append(pmt)&#10;return np.sum(monthlypmt)&quot;,&#10;ATTR([Calculation_63894866693980168]), ATTR([Calculation_63894866694086665]), ATTR([Calculation_63894866693644295]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Months' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_207447105208877066]' derivation='User' name='[usr:Calculation_207447105208877066:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (Equal Principal) (copy)_207447105208303624]' ordering-type='Rows' />
              <table-calc field='[federated.103wpvg1v2xw5a0zsb872043zro0].[Monthly Payment (Equal Payment) (copy)_207447105207947271]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Monthly Payment (Equal Payment) (copy)_207447105207947271]' derivation='User' name='[usr:Monthly Payment (Equal Payment) (copy)_207447105207947271:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Monthly Payment (Equal Principal) (copy)_207447105208303624]' derivation='User' name='[usr:Monthly Payment (Equal Principal) (copy)_207447105208303624:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Payment) (copy)_207447105207947271:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Monthly Payment (Equal Principal) (copy)_207447105208303624:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_207447105208877066:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.103wpvg1v2xw5a0zsb872043zro0].[Multiple Values]</rows>
        <cols>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{C8F6C304-2060-4872-A9ED-099DBAF82273}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Monthly PMT Comparison'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='1' />
          <format attr='font-style' value='normal' />
          <format attr='text-decoration' value='none' />
          <format attr='font-size' value='10' />
          <format attr='color' value='#333333' />
          <format attr='border-color' value='#000000' />
          <format attr='background-color' value='#00000000' />
          <format attr='font-family' value='Tableau Medium' />
          <format attr='font-weight' value='normal' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-weight' value='bold' />
          <format attr='font-size' value='11' />
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='What&apos;s Your Loan Amount? ($)' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20000'>
          <calculation class='tableau' formula='20000' />
          <range max='10000000' min='1' />
        </column>
        <column caption='What&apos;s Your Loan Term? (Year)' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
          <calculation class='tableau' formula='30' />
          <desc>
            <formatted-text>
              <run>Loan Term</run>
            </formatted-text>
          </desc>
        </column>
        <column caption='What&apos;s Your Loan Rate? (%)' datatype='real' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='4.5'>
          <calculation class='tableau' formula='4.5' />
          <range granularity='0.01' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='71800' x='800' y='1000'>
              <zone h='49000' id='3' name='Equal Total Payment' w='71800' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Equal Principal Payment' w='71800' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='266' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='26600' x='72600' y='1000'>
              <zone fixed-size='59' h='8375' hide-buttons='true' id='11' is-fixed='true' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='26600' x='72600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8000' id='9' mode='type_in' param='[Parameters].[Parameter 4]' type='paramctrl' w='26600' x='72600' y='9375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='62' h='8750' id='10' is-fixed='true' mode='type_in' param='[Parameters].[Parameter 3]' type='paramctrl' w='26600' x='72600' y='17375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11250' id='8' name='Equal Total Payment' pane-specification-id='35' param='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' type='color' w='26600' x='72600' y='26125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Equal Principal Payment' w='71800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='59' h='8375' hide-buttons='true' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='26600' x='72600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='9' mode='type_in' param='[Parameters].[Parameter 4]' type='paramctrl' w='26600' x='72600' y='9375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='8750' id='10' mode='type_in' param='[Parameters].[Parameter 3]' type='paramctrl' w='26600' x='72600' y='17375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Equal Total Payment' w='71800' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11250' id='8' name='Equal Total Payment' pane-specification-id='35' param='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' type='color' w='26600' x='72600' y='26125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C767C7F7-47DB-4BCB-BB9E-F7ED88B888FF}' />
    </dashboard>
    <dashboard name='Payment Method Comparison'>
      <style>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-size' value='11' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='What&apos;s Your Loan Amount? ($)' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20000'>
          <calculation class='tableau' formula='20000' />
          <range max='10000000' min='1' />
        </column>
        <column caption='What&apos;s Your Loan Term? (Year)' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
          <calculation class='tableau' formula='30' />
          <desc>
            <formatted-text>
              <run>Loan Term</run>
            </formatted-text>
          </desc>
        </column>
        <column caption='What&apos;s Your Loan Rate? (%)' datatype='real' datatype-customized='true' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='4.5'>
          <calculation class='tableau' formula='4.5' />
          <range granularity='0.01' max='10.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='69900' x='800' y='1000'>
              <zone h='98000' id='3' name='Total Payment Discrepency' w='69900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='285' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='28500' x='70700' y='1000'>
              <zone h='9875' id='9' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='28500' x='70700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9875' id='10' mode='slider' param='[Parameters].[Parameter 4]' type='paramctrl' w='28500' x='70700' y='10875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='11' mode='type_in' param='[Parameters].[Parameter 3]' type='paramctrl' w='28500' x='70700' y='20750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10750' id='8' name='Total Payment Discrepency' pane-specification-id='2' param='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' type='color' w='28500' x='70700' y='27750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='18' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Total Payment Discrepency' w='69900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='8' name='Total Payment Discrepency' pane-specification-id='2' param='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' type='color' w='28500' x='70700' y='27750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9875' id='9' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='28500' x='70700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9875' id='10' mode='slider' param='[Parameters].[Parameter 4]' type='paramctrl' w='28500' x='70700' y='10875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='11' mode='type_in' param='[Parameters].[Parameter 3]' type='paramctrl' w='28500' x='70700' y='20750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6C1DCE07-42C6-4BA0-A953-74662E7F3240}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='49'>
    <window class='worksheet' name='Equal Total Payment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='232'>
            <card mode='type_in' param='[Parameters].[Parameter 4]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='35' param='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389356740609:nk]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389359108098:nk]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_414120106245738499:nk:2]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_414120106245738499:nk]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Calculation_414120106245738499:ok]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Half An Year ( test passed) (copy)_63894866776043535:ok]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Half An Year (copy)_63894866750910474:ok]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Half An Year (ratio reference) (copy) (copy)_63894866752610316:ok]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[usr:Half An Year (ratio reference) (copy)_63894866751713291:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F26DA32-8AFF-4120-98C6-9F72F1375CDA}' />
    </window>
    <window class='worksheet' name='Equal Principal Payment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='248'>
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='3' param='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389359108098:nk]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8BEA582-62C0-43C0-B061-D66D0ABE8CEC}' />
    </window>
    <window class='dashboard' maximized='true' name='Monthly PMT Comparison'>
      <viewpoints>
        <viewpoint name='Equal Principal Payment'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Equal Total Payment'>
          <zoom type='entire-view' />
          <highlight field='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8859FBC6-34F9-493D-9A66-1F345C1C2CC3}' />
    </window>
    <window class='dashboard' name='Payment Method Comparison'>
      <viewpoints>
        <viewpoint name='Total Payment Discrepency'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0113CDBA-E501-4A08-B4D4-0154EE82C097}' />
    </window>
    <window class='worksheet' name='Monthly Discrepency'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Calculation_773704389359108098:nk]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18BF8AD5-E17C-4EFF-BC72-5EB5969E388F}' />
    </window>
    <window class='worksheet' name='Total Payment Discrepency'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='2' param='[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[:Measure Names]</field>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBB2D6D5-B42E-4524-AB00-5D16E6669D86}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.103wpvg1v2xw5a0zsb872043zro0].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B07FE183-E07B-4540-BE6B-DDC8FB2AB079}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Equal Principal Payment' width='384'>
      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
      TbS1tREdHR1M9Z0+fZrf//73/OxnP8PpdPL4449z99138/3vfz940/fVr36VmpqaC96j1157
      jS1btvDYY4/x+uuv89JLL12TmOdDyMcALu5KxsXFXfJ7suEPPcqcDD5xOxG334Z2dhpXSwuz
      +xvw9vbie+11Zl9/A3NqKva5NNHKlXKdwRLGarVSVlZGS0sLW7Zsoaenh7KyMvx+PzMzM/zp
      n/4pZWVljI6Osnv3br773e/yk5/8BJfLRUlJCW+99RbPPPMMR48eZWZmhra2NqKiogDYtWsX
      fr+fQ4cOMTo6yh/8wR8AgbvUV155hePHj/PFL36RZ599lpycnKAAIJAKiYyMJCsri5mZGdxu
      N7/61a/IzMykvb2dAwcOcP/99/Od73yHF198kenpab73ve/xm9/8hu9+97vk5uZisVj48Y9/
      zKZNmxgbG6Ozs5O/+Zu/4YknnqC4uJixsTHa29v51re+xVNPPRXMPvz0pz/l5Zdfpqenh+np
      adra2oiLi6O5uZnh4WH+7u/+DgikWyIjI3njjTfIzs6mtLQUgE2bNnH77bfzne98J1ie/v5+
      MjMzWblyJRBoA4eGhigsLATgvffew+FwsGHDhgven8rKSl544QWysrLYs2cPmzZtWvTPgPx2
      L0MURcEYE03klk8Q+Ynb8Y+Pc7apGV9rK97eY5zd+nvO/n4b5sxMHFWV2KurMKelzWs2keTm
      YvPmzbz66qvk5OSQkJBAdHQ04+PjdHd3k5CQwF/+5V/idDp55JFHOHv2LAB/9Vd/RXFxMb29
      vWiaxuc//3kGBgb41re+BQTSJ5/85Cd5/PHH2bp1KydOnLgg5uc+9zn+7d/+jfvuu4+DBw/y
      ta997YL/37t3L6dPn6arq4v7778fm83GV7/6Vdrb28nKyqKnp4fVq1eTnp7O/v37GR0d5bbb
      bgvebP7jP/4jZ86c4eTJk/zf//t/aWpqYtu2bQwMDDAxMcHdd9+N2+3mb//2b/mzP/szAJ5+
      +mk0TWPfvn2YTCYeeughzp49GyxTcXHxBddoMBh45pln+I//+A+ee+45Ojs7+f73v4/ZbL6k
      B+10Oi/I39tsNpxOJxAYj3ruued45JFHLkkNrlixgomJCfbs2cPg4OBl0z/XixTAckdRMCUk
      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
      +UzBkqVeLQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Equal Total Payment' width='384'>
      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
      9xYCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='96' name='Monthly Discrepency' width='302'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Monthly PMT Comparison' width='384'>
      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
      oIAnn3zS5xiHIjlxlr6C88yvUEb6ME7fQvjaZ9BHp9/yerWjzqFpgcAPgp0olKgo5MSEoCaK
      VatWsXPnTnbv3s3FixcBePLJJ9m5cyevvPIKubm5JCUl3fTvli5dymc/+1nq6upYsWLFTb8f
      rfDy8vKYOnUqGzduHPP7yMhI8vPzvf+dnp7O73//e6qrqxkZGQHgS1/6Eg899BCvvvoqtbW1
      Pj/j7//+7/ne975HTk4OCxcuvOn3o99z/fr1fOc73+HLX/6ytwvI7Xbz1FNPUV9fT3JyMj//
      +c/505/+xG9/+1vq6+t58MEH+fGPf8yjjz7KunXrsNvt7Nmz55bX7Nixg8OHD/PMM88wNDTE
      8PAwW7duvWXlrygycss5XJX7kcpexZBXjH7pl4lIm+OzrLSAqo6EFIPAgUG4+sftEoXUY8Vt
      syH39k56i2Lg6FH6/voaqT/5v+N2dblc2Gy2W1b+brcbo9HI4OAgOp2OKVOm+HyfyspKnn76
      af785z+TkpJy28/s6enBbDZjMpkYHBzk5ZdfprKykhdeeGFcvg6Hg2nTpt3SVVEUrFYrMTEx
      t6wTfvzjH/OP//iP4/a7HYqi0NPTg8FguKmrSFFk5I4ruKtKUAY60EVnYMpZjTFruaruVX8R
      LQCBwAd3alGMVgCT3fXk7uicsKvJZLpl5X89ozNwbsd7773Hc889d8fKHyA+Pt77c09PD/39
      /Xz3u9+9sywe39tVzDqdbsz738gnP/nJCfndDp1OR0JCwk2vS53luKveRulvQ2dOw7TkcxiS
      Z2tmncp4EC0AP9FS9heugWGirndqUVyfKAzxcaT+9CeT4jn6VK0F1OAq2xpwV+xDttZBRAym
      GVvRZyz2rvq91TRQraKNu0IguAcY7xjFwDvv0PfGm0GyEowi9zbjrjqA3FUBEdEYZz+CIXM5
      OkPgFmKFmnunLSMQ3Cvc4gnY4XDw85//nMrKSsDzpPyLX/zCO4f/TvT29mK32wHPwqc//vGP
      t73e7XbzyiuvYLPZvK/V1tayb98+73+fPXuW5557jrNnz/r1Gf7Q3PzhPmFf//rXJ+U95d5m
      nGd+hfPkfyP3t2GctYPw4n/GmLPmnq78QSQAgUATDA0N8b3vfY+f/MTTLXTy5Em+//3vc+LE
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Payment Method Comparison' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3de3gU9b0/8PfsJZs7STb3hABJIOF+v5SLELkJKEfbn/Vg1dYe5YDlefRo
      tafVozz1tH2qtY/a2qPVg1KLfc6Bo7RyEUgCBrknIRACiSEkITdyJclms9nLzPz+oNkaYZFJ
      dhJm8n79o2w2n+93v9/JfHY+850ZQZZlGURENOwYhroDREQ0NJgAiIiGKSYAIqJhigmAiGiY
      YgIgIhqmmACIiIYpJgAiomGKCYCISAMuX74Mm812y+8XRRE9PT03fQ8TABHRbaCpqQkrV66E
      w+HAX/7yF9x7772QZRmvvfYatm3bhl/84hc4derUTWO88cYbOHv2LABg7969eO655274vu3b
      t2PTpk0w+f1TEBGRYjExMRBFEeXl5SgqKkJ3dzcaGhpQVFSEDRs2IC8vD0eOHMGBAwewdu1a
      TJ48Ge+88w4aGxuxePFiJCUlYe/evSgvL8f999+PwsJCPProo6isrMSf/vQnAMAjjzyCMWPG
      4J577sH777/PIwAiotuBIAiYOHEiysrKUFFRgeXLl6OkpAQVFRWYMGECAMDj8cBisWDHjh1w
      u91ITU3F7Nmz8fLLL8NqtSIsLAzjxo1DcnIy1q1bh+nTp2Pr1q3o6urCokWL4HK5AACBgYHY
      uHGj7yOAiooKdHd393ktJiYG8fHxA/qQZ86cgcViQWZmpve1pqYmNDY2QhAExMTEIC4ubkBt
      qM1ut+PSpUsQBAFWqxUJCQnenzU0NMBoNCI2NnYIe0hEWjRhwgScOnUKFosF48ePx2effYbo
      6GhERkYCABYvXozu7m7k5OSgubkZ27Ztw+jRo+HxeBAdHY2IiAhMnjwZaWlp3pirV6/Gb3/7
      W7zyyiv4z//8T+/ra9as8X0EUFxcjBMnTuCtt97Czp07ceLECdTU1PjseH5+Po4ePfqNH7Cy
      shJ1dXV9Xtu1axc+/vhjHD9+HG+++Sb+4z/+A7fDPerefPPNG75+8eJFvPnmmzh69Ch+//vf
      Y8OGDWhvbwcAXLp0CdXV1YPZTSLSiYkTJyIvLw8ZGRlIT0/HF1984f32/3VFRUUIDw/HrFmz
      vK+FhoZiz5493vMAAFBeXo6HHnoIaWlpyM/P975uMBhg3Lx58+YbBc/MzMSMGTNQX1+PrKws
      rFmzBklJSQCA06dP48SJEwgKCkJERATa29tx4MAB1NbWwmQywWQyITg4GCUlJTh9+jRcLhdi
      YmIAAKWlpbBYLEhNTfW2dfr0acyfPx9r167F0qVLkZeXh5EjRyIyMvK6GHa7HfX19YiIiAAA
      OJ1O1NTUQJZl2Gw2nDx5EuXl5UhJSUFBQQFOnz6NhIQEWCwWAEBVVRVyc3NhMBgQHR0N4NrR
      jtvtxqFDh2Cz2ZCYmIjz589j+/btSElJQVNTU58jn8bGRrjdbmzYsAFLly5FUFAQPv74Y9xx
      xx0ICQlBdHQ0AgMD4XK5cPToUVRUVCAqKgqBgYEAgOrqahQUFMBsNmPEiBGorq5GaGgo6urq
      0NjYCKvV6rOfTU1NOHbsGEJCQhAeHg7g2mFhdnY2Ll68iKSkJJjNZrS1tcHhcKCoqAhnzpxB
      XFyct/22tjacOHECXV1dCAkJueF49n7jIKLBExERAbPZjKysLGRkZMBgMGDp0qVITEyEIAgY
      N24cIiMjYbVasWTJEtTW1sJqtWLChAmYOXMmMjMzUVtbi4SEBCQnJwO4tn/Iz89HUlISHnzw
      Qe9+AOjHKqDt27fjr3/9K8LDw/Hqq6/i9OnT6OrqwpUrV9DY2IiKigp0dHTgzJkz+PzzzwEA
      H374IXbv3n3LbQQEBECW5RvGMBqNeP755yGKIgDg0KFDOHz4ME6cOIGnn34anZ2dOHfuHL7/
      /e+jvLwcdrsdv/3tbwEA586dw+uvv464uDh88MEH3iOWF154Ae+88w4CAwPx/vvv48KFC6ip
      qUFXVxcqKipQVVV10/4uXboUZWVlkGUZhw8fRkFBAQDgxRdfRG1tLWw2G7Zt2wYA2LNnD373
      u9/B4XDg448/9n62//mf/8GvfvUrtLS0+Ozn888/j+zsbAQEBOD5559HRUUFAOCll15Ce3s7
      PB4PfvKTn0CWZZw4cQI/+tGPUFVVBY/Hg5dffhnAtSOUZ599Fp2dncjNzUVra+sNx5OIBl94
      eDjWr1+P6dOnIyAgAOvXr/d+w7/77rsxZswYjBs3DnfddRdGjBiBZ555Bt/5znewfv16mM1m
      pKam4plnnsG8efO8MWfMmIFnnnkGGzduxIgRI/q0p3gV0P79+/H222/DaDRi8uTJ+M1vfoNf
      //rXmD9/PhwOB9auXet9b2ZmJurq6hAaGoqcnBysWbPGZ9zDhw/j8uXLqKysRHt7O9LS0mAw
      GG4YY968efjiiy+wePFi7N+/Hz/96U9x6tQpPPzww1i5ciXKy8thMpnwve99DwDw5JNPAgB2
      7NiBn/zkJ0hISMCkSZPwy1/+EvPnz0dcXBxefPFFAPAms5UrV2LXrl347ne/e0vjEhYW5j3B
      0quzsxOTJk3CpEmTIAgCAGDnzp146623YDab+7z30qVL+P3vfw+DwYDNmzffsJ/x8fHYtGkT
      ACA2NhafffYZ7rvvPgQEBHj7eeHCBW9i+MEPfoCVK1cCAA4ePAgA+Oijj/DTn/4U6enp3rZv
      NJ5EpH+KE0BAQACMRiMAIDo6Gna7/YbvO3bsGD788EPMnTsXoih6v2H6EhERgfj4eEydOhVj
      x46FIAg+Y9x///341a9+hSlTpkAQBG+JxJfenW9rayvefvtt77+joqIUfXZfRFFEZ2cnAgIC
      +rz+s5/9DB999BHefPNN3HnnnVi3bh1MJtN1O38A2LBhAwwGwy3302q1wm63o7W1FaWlpeit
      5NlstusSEfCPMWhqasKoUaP6/EzpeBKRPihOAJIkwWazISwsDKWlpd4VML115167d+/2Lk2q
      qanBe++9d9O4kydPxty5c/u85itGfHw8goOD8d5772H16tW33PeUlBSsXLkSU6ZMAYBvvKpO
      FEXIsuzded6ILMvYsmUL7rzzzuveZ7Va8dxzz0GWZTz++ON44IEHIAgCrl69isjIyD6xv/q7
      t9LPw4cPIzMzE0lJSYiLi8NLL70EQRDgdrshiqLPE9Fjx45Ffn4+vvWtb3n739/xJCJtu6UE
      8NWd07/8y7/gqaeewvjx43HhwgVvbXnKlCl48sknUVlZiUWLFmHevHnYvHkzEhMT0dbWhpCQ
      kJvGv9FO9mYxHnjgAfz4xz/GU0899Y197vXwww/jhRdeQEpKCjo6OjB+/Hg89thjPn9v1qxZ
      ePrpp5GQkNDnijpBELB//36UlZWhp6cHkydPxoYNG65r78UXX0RYWBiMRiNGjhwJg8GAJ554
      Aj/+8Y8xevRodHR04De/+c0t97OxsRGbN29GT08PDAYDfv7zn8NkMmHGjBl44oknkJCQgMbG
      Rjz//PM+x+Phhx/Gz372M+zbtw8tLS144YUXEB8f/43jSUTqkyQJW7ZsgclkQmxsLDIyMpCd
      nQ2DwYDHHnsMgiBAlmX88Y9/hCzLWLVqlXcRSO97du7cCZvNhpSUFCxZsuTmDcr94HQ65crK
      StnlcvV53eVyyY2NjbIoirIsy3JbW5vc3Nzcnya8fMUoLi6WX3vtNcXxJEmS29raruu7L1ev
      XpVtNpvidnq1trbKjY2NfV4TRVFuaWnxjtOt9vPJJ5+UOzs7b9gfp9MpX716VZYk6Zb6dfXq
      1T6x+zueROQ/kiTJLpdL7unpkd99911569atsiRJcl5enlxRUSHLsixfuHBBPnbsmCyKorx1
      69br3vPBBx/Isix7/3sz/boVREBAAEaPHn3d62azuc8FUP5YSnijGB9++CEOHz6MX/7yl4rj
      CYKgqF+9yyP760b1e4PBAKvVetPf89XPsLCwG74/ICDgunMQN/PVzzWQ8SQi/xEEAQ0NDdi5
      cyceeeQR7N69G4IgICoqCh0dHQCuLS6Jioq6to7/7+dje9/T1tbmXfJuMn3z7l2Tt4L453/+
      Z7zzzjvD7mTl66+/rkrc4TqeRLcbURSxY8cObNq0CRERETAajejs7MSFCxeQkpKCrq4ujBo1
      CufPn8fVq1dhNpv7vGfMmDHo6OiAJEnX3cnhRjSZAMxm801PzJIyHE+i20NPTw+io6Oxfft2
      HDx4EGvXrsWnn37qvR3Eli1bEBcXh/DwcOzduxdr167t8x6r1YqFCxfiz3/+M1atWvWN7Qmy
      fBvcc4GIiG7K4XDA4XD4bfk6wARARDRsabIEREREA3dbJQBJkvr9u06n04896UuSpAH1Te/x
      PR6ParG1Hl/rc8ttxze1x2Yw3FYJYCDVKCXPylRK639kasf/ptt8DOf4Wp9bbju+MQEQEZFm
      6SYB9F78QEREt0Y3CUDNcwBERHqkmwRARETK6CYBsARERKSMbhIAS0BERMroJgEQEZEyukkA
      LAERESmjmwTAEhARkTK6SQBERKSMbhIAS0BERMroJgGwBEREpIxuEgARESmjmwTAEhARkTLf
      /Nh4jXDa7QhT6dasgvT3W8oajIx/o/huF9AToEpsrcfX/Nxy2/EdWxKvjcuIEarEHwy6SQBR
      584Cl6tVia3Opq+f+Or9+Wo/vtbnltuOb96xuffbQJRVxZbUc1s9E1gURRiN/dvkuuvrEezo
      9nOPrul9qER/+6b3+G63G2azWZXYWo+v9bnltuObKIqA0QjjmFTAoM1qumpHABUVFWhoaMDs
      2bPh8XhQVFSEiRMnIigoCA6HAxEREaitrUVycrJf2usOCEBwYqJfYn2d3PtYOZM6w6X1+JLT
      Cah4DkbL8bU+t9x2fPOOjUZ3/oBKJ4Grq6vR0tKCmTNnAgByc3Mxbdo0HDx4EJ2dnaiurkZ+
      fj6XbhIRDSFV0npZWRlMJhPy8vKwaNEiBAUFISQkBGFhYZBlGcXFxYiLi8OsWbMAXDtMA649
      Y3MgD3FWK6H0PvdTreeLaj2+KIqqJnMtx9f63HLb8W2gY2M0GmH6ypFVZ2cnDhw4gG9/+9uo
      qKhAaWkp7r77bhQVFcFgMODw4cNYtGgRpkyZ4jPmpUuXEB0djfDwcFy6dAmnTp3CAw88cN37
      CgsL4XK51EkAJpMJixYtgtPpxKlTp/oMlCAISE9PR21trbfm31ujG8g5AJvNptpS0N6kZFLp
      MFjr8Z1Op6rLcLUcX+tzy23HN3+PjdlsxiuvvIJ58+Zh586d2L59O5YuXYoPPvgAS5Yswdmz
      Z5GRkYHKykokJyfDbDajvb0dLS0tSElJgSRJePnll3Hfffdh+fLlyMnJ8faxoaEBABAfHw9B
      EBAQEIB/+7d/UycBTJ06Fbt27UJQUBDGjx+PqqoqfP75596fBwUFISsrC9nZ2Vi5cqUaXSAi
      0pSgoCCkpqairKwMFy5cwIwZM1BeXo4vv/wSTzzxBPbu3YtXX30VLpcLy5cvxw9+8AOsX78e
      QUFBMJlMePzxx1FeXo4//vGP6O7uhsfjwSOPPIKtW7fif//3fxEeHo4f/vCHWL58OSZNmoQF
      CxaokwCsVivuueceiKIIi8WCUaNGweFwICgoCAAQExMDAH7d+fNCMCLSuokTJ+LChQtobW3F
      t7/9bRw/fhydnZ1ITU0FADz77LPo7u7GwYMHYbVa8cMf/hDl5eXYvn075s+fj/Hjx+N73/se
      lixZ4o3Z0tKCqKgo/NM//RMWLFjgfX3Tpk3qXQlsMpn67JR7d/5q4QllItK6iRMnYv/+/UhJ
      SUF6ejp27dqFjIwMb5nJYDDA8PdVR3v37sXevXtx9913AwBkWYbBYIDD4egT88EHH8Sjjz6K
      3bt346OPPvK+npiYqJ9bQRARad3EiRNRV1eHjIwMjB07FvX19Zg4cSIAQBCEPu9NSEhAaWkp
      fv3rX3tfmz17NjZv3owtW7Z4X9u6dStef/111NTUID09vU8M3VwIZrPZEBYW5uceXaP1E208
      kTd08bU+t9x2fFN7bG5FR0cHQkJC+vTBZrMhODi4z77UZrPBZDJdV4nRza0gnE6nagmAiOh2
      NOIG9yG60X7Q176RJSAiomFKNwmAq4CIiJTRTQLgKiAi0ovepaC9rly5guzsbOTm5vq1Hd0k
      ACIiPbh69Sp27NiByspK72uHDh3ClClTMHXqVL+2pZsEwBIQEenBJ598gvvuu6/Pax6PBzk5
      OTh//rxf29JNAmAJiIi0rrS0FE1NTcjLy8PRo0e9rz/00ENYt24dqqur0dnZ6bf2dLMMlIhI
      6zIzM/Hv//7vKCsrg81mQ2FhIRISEpCfnw+Px4PGxkaEhIT4rT3dJACWgIhILzIyMvr8+557
      7kF3dzeCgoKuuyJ4IFgCIiLSgODgYL/u/AEdJQAiIlJGNwmAJSAiImV0kwBYAiIiUkY3CYCI
      iJTRTQJgCYiISBndJACWgIiIlNFNAiAiImV0kwBYAiIiUkaVK4GvXr2K3NxcREVFYcaMGTh3
      7hxcLheCg4MxduxYNDc3IyEhAefOncP8+fP90iafCEZEpIwqCaChoQHTpk1DamoqBEFAV1cX
      lixZAovFgubmZjgcDuTk5HifZi+KIgBAkiT09xHFkiR5n9Hpb5IkAQDj3yS+WrG1Hl8Pc6t2
      /OE6twaDAQbD0BZhVGk9NjYWTU1N+Pjjj9HY2IiUlBScOHECn3zyCQAgPz8f4eHhMJvNfmuT
      JSAiImVUOQIQBAFz585FTU0Nrly5gqSkJIwfPx5/+9vfAACzZ89GR0cHampqMHLkyD5Pr//q
      /yvhdrthMqlzb7veDM/4NyaKomqxtR5f63PLbcc3tcdmMKhyBCBJEnJzc1FdXY3Jkyejrq4O
      2dnZyMzMRHBwMOLi4rBo0SK0t7er0TwREd0CQe5v0V0Foij2+wjAZrOpdhJY69+y1I7vdDpV
      LcFpOb7W55bbjm88AriN8EIwIiJldJMAiIhIGd0kAK4CIiJSRjcJgCUgIiJldJMAiIhIGd0k
      AJaAiIiU0U0CYAmIiEgZ3SQAIiJSRjcJgCUgItKzy5cvw2az3fL7RVFET0/PTd+jmwTAEhAR
      aVlTUxNWrlwJh8OBv/zlL7j33nshyzJee+01bNu2Db/4xS9w6tSpm8Z44403cPbsWQDA3r17
      8dxzz93wfdu3b8emTZvUuRkcEREpExMTA1EUUV5ejqKiInR3d6OhoQFFRUXYsGED8vLycOTI
      ERw4cABr167F5MmT8c4776CxsRGLFy9GUlIS9u7di/Lyctx///0oLCzEo48+isrKSvzpT38C
      ADzyyCMYM2YM7rnnHrz//vv6OQJgCYiItEwQBEycOBFlZWWoqKjA8uXLUVJSgoqKCkyYMAHA
      tfsPWSwW7NixA263G6mpqZg9ezZefvllWK1WhIWFYdy4cUhOTsa6deswffp0bN26FV1dXVi0
      aBFcLhcAIDAwEBs3btRPAmAJiIi0bsKECTh16hQsFgvGjx+Pzz77DNHR0YiMjAQALF68GLNm
      zYIkSWhubsa2bdtw4sQJeDweREdHIyIiApMnT0ZaWhrGjh0LAFi9ejVqamrwyiuv9DmHsGbN
      Gv0kACIirZs4cSLy8vKQkZGB9PR0fPHFF95v/19XVFSE8PBwzJo1y/taaGgo9uzZ4z0PAADl
      5eV46KGHkJaWhvz8fO/rBoMBxs2bN29W7dMoJMtyvx+RJoqiamWg3ke/qfX4Nq3H1/JDPdSO
      r/W55bbjmxpjExERAbPZjKysLGRkZMBgMGDp0qVITEyEIAgYN24cIiMjYbVasWTJEtTW1sJq
      tWLChAmYOXMmMjMzUVtbi4SEBCQnJwO4VjbKz89HUlISHnzwQQQGBnrb083zAFpaWhAdHe3n
      Hl2j9Xuu857uQxdf63PLbcc3Pg+AiIg0SzcJgKuAiIiU0U0C4CogIiJltFu8IiLSGY/Hgw8/
      /BBmsxmxsbFIS0tDdnY2DAYDHnvsMQiC4Nf2VDkCcLvdKCgoQEFBAbq6umC323HkyBG0t7fD
      6XSivb0dAFBbW+u3NlkCIiKtM5lMePTRR7Fq1So0NjbiyJEjWL9+PTIzM1FZWen39lRJAPX1
      9TAajUhPT0dgYCByc3Mxbdo0HDx4EJ2dnaiurkZ+fr5fyzYsARGRHhQWFuLtt99GWloajEYj
      BEFAVFQUOjo6/N6WKiUgm82G2tpa2Gw2LFiwAEFBQQgJCUFYWBhkWUZxcTHi4uK8FzC43W4A
      19bV9i6tUkoURdWSQO96X1EUGf8G1Bx7rcfX+txy2/FtoGNjNBqvW0LqcDiQmZmJ6dOn4913
      30V4eDg6Oztx4cIFZGVlDbjPX6dKApg0aRImTZqEqqoqnD17ts9ACYKA9PR01NbWetf9m81m
      78/7ex1AcHCwZtf7aj2+ltdyqx1f63PLbcc3NcZGkiTs2rULoigiKysLSUlJ+OSTT5CUlASr
      1eq3dnqpciFYWVkZ6uvrcfXqVSxatAjnz58HAPT09GDGjBmor69HcnIy8vPzsXLlSu/v8UIw
      bcbX8h+x2vG1PrfcdnzTw4Vgql0J7Ha7r91r4u87dIfDgaCgoJv+DhOANuNr+Y9Y7fhan1tu
      O77pIQGo1vPesk6vb9r5DxRXARERKcMLwYiIhindJAAiIlJGNwmAJSAiImV0kwBYAiIiUkY3
      CYCIiJTRTQJgCYiISBndJACWgIiIlNFNAiAiImV0kwBYAiIiUkY3CYAlICIiZXSTAIiItO7T
      Tz/FSy+9BADIz8/Hv/7rv6rSzpYtW7B161b9PBKSJSAi0rr29na0tbWhs7MTx44dQ0hICJxO
      J9544w14PB5s2rQJu3fvRkVFBebMmYOYmBjs2rULY8aMwZQpUyCKIgyGa9/rz5w5g46ODixY
      sACfffYZTCYTnn76aZhMJrS0tKC1tVU/RwAsARGRHixcuBBHjhyB2+2GxWLB0aNHIcsyRowY
      gUOHDmHixIlISkrCnj17UFZWhrCwMCxYsABtbW1oaWlBW1sbWltbcfToUSxevBilpaWIjo6G
      0+lEUVGRt51169bpJwEQEenB1KlT8be//Q3jxo0DcO1hV263GwsWLEBmZibee+893HXXXQgM
      DMSCBQtw991349VXX4UgCGhvb8eVK1cAADExMZgyZQqCg4MhSRLuuusuxMfHe9tJT0+HcfPm
      zZuH4kPeiCzL3sMXpURRVK0M1PtEs/72Te/xRVFU9Z7oWo6v9bnltuObGmMjCALi4+MRFhaG
      hQsXIjAwEAsXLkRzczMuXLiAKVOmICAgAOfPn8fUqVNhNBqxd+9eLFu2DNOnT8fnn3+OsLAw
      TJo0CZGRkRgzZgxSU1NRVlaG2tpaTJs2zXtr/pSUFPUeCNMffCCMNuNr+aEeasfX+txy2/FN
      Dw+EYQmIiGiY0m7q+hquAiIiXThd4Ptn02f6tSndJACn04mwsLCh7gYR0cCcLvT9Mz8lgN5n
      tKtaAurq6gIAuFwu2Gw22O12SJLkrZ1x6SYRUf88/PDDaGtrAwD87ne/w549e276/uPHj6P3
      lO+2bdsAqHgEcOnSJezduxc/+tGPcPDgQURFRSEwMBDx8fGor69HREQEGhoaMG/ePL+0xxIQ
      EQ0nI0eORG5uLu69917U19cjLi4OJ06cQGFhIWJjY7F48WK89957CAwMRFZWFv785z+jrKwM
      K1euxMmTJ+F2u9VJAG63G2VlZcjIyAAA2O12JCYmIjU1Fd3d3WhtbUVVVRXWrl3rfT9wbRlo
      fxcldXd3e5c3+Vvvcq/eIxfGvz6+WrG1Hl8Pc6t2/OE6twaDYUBLSHu/TB89ehQLFy6E3W7H
      sWPH8NRTT+G//uu/0N7ejoyMDKxevRofffQRZsyYgUceeQSCIGD27Nl4/PHH1SkBHThwAFar
      FY2NjWhoaMCKFSsQGxuLTz/9FMC1y51NJhMEQQAAmM1mmM1m1dYaExHpUXJyMg4ePIipU6cC
      uJaUJEmC0+mE0WiEIAjeZaoGgwF2ux0AvPteVY4AFixYAJfLhYaGBoSFhaGsrAzJycneNf5p
      aWmwWCwoKCjAzJn/OKkhCEK/rwMIDg7W7FporcfX8sU8asfX+txy2/FtqK8DmDt3LjIyMhAd
      HY3w8HBMnDgR06dPx1tvvYWZM2ciKioKmZmZEAQB06dPR1xcHLZs2YL7778fM2bMAAB1LwS7
      evUqIiMj0d7ejsuXL2PMmDGwWCxwuVwIDQ1FU1MTYmNjve/nhWDajK/li3nUjq/1ueW245tq
      Y6OXZaCRkZEAgIiICERERHhfDwgIAIA+O38iIoLfd/I3o5uiO1cBEREpwwvBiIhuI85jf/D5
      M8u3nvBrW7pJAEREeuA6rn4CGJQrgQcTS0BENJzc1lcCDzaWgIhoOPHHlcC6OQIgIhpOvn4l
      MAAcO3YMGzduRFNTk/dK4I0bN6KwsNB7JXB8fDxmz56NjRs36icBsARERMPNbXkl8FBgCYiI
      hpPb/kpgpQZyJXBbRT7CnHV+7tE1kvj3Z38aVXruqsbje9wemMzqfZfQcnytzy23Hd8kUQJM
      AQjIWAnB4L82uAy0HwKKt6Kn8uBQd2PYUu9+jvqIT75pfW5N0WNhjBnnt3j+3snfjG6OAFqu
      1CEqSJ2PIooiAPS7b3qP73K5vLf3YPy+tD633HZ8E0URMAbAPCJBlfiDQTdHADBZYBihzs3g
      pL/f9Mmg0g2xtB5fcDphUPEkvJbja31uue34Jqn0nIGOHf/n82cj/t93/NqWbhIAVwERkR4M
      RgLQ3ZXAfL4wEQ0nvBKYiGiY4pXAX8ESEBENJ7wS+CtYAiKi4YZXAhMRDUO8EvgrbDabareC
      0PpzV/lc16GLr/W55bbjm1pjw2Wg/cB7ARGRHvh7J38zqp0DcLlc2L17NwDg8uXL2L9/P778
      8kvYbDbU1dXB4/HgzJkzajVPRETfQLUEcPjwYe9l5MXFxVixYgXKy8vR09ODlhaQAgAAABhA
      SURBVJYW5OTkICUlxW/tcRUQEZEyqpSAqqurER0d7b3ooHfnbLFYIMsyTp48ibS0NERGRgIA
      3G43gGtnsD39vLy6u7tbtXt+SNK1OyL2JjTG70sURVVXYWk5vtbnltuObwMdG6PRqNq5lVul
      WgIAgIqKCowePdq7U/d4PBAEAXPmzEFVVRW6uroQGhoKs9kMYGAngY1Go+ZO9uglvpZP5Kkd
      X+tzy23HN7XHZjCo0vM77rgDABASEoL09HT09PRg3759iI6OhtlsRkhICFatWoXjx4973ztQ
      LAERESmjm2WgLS0tiI5W526gWv+WxW9xQxdf63PLbcc3PRwB6OZKYCIiUkY3CYAlICIiZXST
      AHgvICIiZXSTAIiISBndJACWgIiIlNFNAmAJiIhIGd0kACIiUkY3CYAlICIiZXSTAFgCIiJS
      RjcJgIiIlNFNAmAJiIhIGd0kAJaAiIiU0U0CICIiZXSTAFgCIiJSRjcJgCUgIiJldJMAiIhI
      Gd0kAJaAiIiU0U0CYAmIiEgZ3SQAIiJSRjcJgCUgIiJlVEsAbW1t6OrqAgC4XC7YbDbY7XZI
      kuR9mLI/yzYsARERKaPK4+yrq6vR3NyMpqYmTJ48GefPn0dUVBQCAwMRHx+P+vp6REREoKGh
      AfPmzVOjC0RE9A1USQCjRo2CyWRCc3MzgoODYbfbkZiYiNTUVHR3d6O1tRVVVVVYu3YtAMDt
      dgMAZFmGLMv9atNsNnuPLPxNkiQAYPybxFcrttbj62Fu1Y4/XOfWYDDAYBjaKrxqrXd0dEAQ
      BDidTqxYsQKxsbH49NNPAQDt7e0wmUwQBAHAtZ232Wwe0GCwBEREpIwqRwAVFRWIioqCKIpo
      bGxEQ0MDkpOTYTQaAQBpaWmwWCwoKCjAzJkzvb8nCIL3PUoZDAaYTKp8HG+GZ/wbE0VRtdha
      j6/1ueW245vaYzMYVOl5UlISysvLERwcjNTUVHR0dODy5cu46667YLFYEBQUhNDQUDQ1Nfmt
      Ta4CIiJSRpUEEBgYiMmTJ3v/HRERgYiICO+/AwICAACxsbF+a9PpdCIsLMxv8YiI9E431wEQ
      EZEyukkALAERESmjmwTAVUBERMr06xxAWVkZWlpaYLVakZmZ6e8+ERHRIFCcAOrr63Ho0CEE
      Bgbi8uXLSExMRHh4uBp9U4QlICIiZRSXgCwWC7q6unDlyhWUlJTcNjteloCIiJRRfARgtVrx
      /e9/H6WlpcjMzLxtEgARESmj+AjAZrPh/fffx7Fjx/Dzn//cex+focZERESkjOIjgLCwMDz7
      7LMAgK1bt8Jut/e5yGuo8EIwIiJlFCcAm82GP/zhDwAAo9GIkJAQv3eKiIjUpygB1NfX4/Ll
      y1i8eLH3taG+nWkvloCIiJRRlAAkSbptV9uwBEREpIyiBJCcnIzExES89957aGlpAQDMnz+/
      37dwJiKioaP4HEBtbS3i4+NhtVohSRLcbjfMZrMafVOEJSAiImUUF/BjYmJgsVhgs9lQUFDg
      fSzaULtdS1NERLcrRUcATU1NqKiowJ133nlbfOsnIqL+U5QARowYge7ubrzxxhsAgClTpmDp
      0qW3xTkAloCIiJRRVAKyWCxYunQpHn74YYwePRo7duyAw+FQq2+KsARERKSMoiOAmpoa/Pd/
      /zcSExOxZMkSfOc734EgCGr1jYiIVCTIsizf6ptlWVZ1hy+KYr/LSTabTbXrADweDwDAZFLl
      Ecqaj+90OlUtwWk5vtbnltuOb2qPzWBQ1PNb3fnX1dXh/PnzkGUZixcvRmNjI0pLSzF69Ggk
      JCSgs7MTcXFxKCkpwdSpU/vV8a/jhWBERMqoch+H2NhYLF++HGPGjEFlZSWKi4uxYsUKlJeX
      o6enBy0tLcjJyUFKSooazRMR0S1Q5djFbDYjOzsb5eXlWL9+PWprawFcO4ksyzJOnjyJtLQ0
      REZGAoD3ltKSJHkPq/pDrRPBvdc6iKLI+DcgiqKqJ+G1HF/rc8ttx7eBjo3RaBzy8pFqrS9b
      tgyTJk1CQUGBd6fu8XggCALmzJmDqqoqdHV1ITQ01HtNwUDPAWi11qf1+Fqu46odX+tzy23H
      t2F3DuBWlZSUoKGhAS6XC/PmzUN9fT327duH6OhomM1mhISEYNWqVTh+/DjuuOMONbpARETf
      QNEqILVxFZA242v5W5za8bU+t9x2fNPDEcDtcTN/P+CFYEREyugmARARkTK6SQC8FxARkTK6
      SQAsARERKaObBEBERMroJgGwBEREpIxuEgBLQEREyugmARARkTK6SQAsARERKaObBMASEBGR
      MrpJAEREpIxuEgBLQEREyugmAbAERESkjG4SABERKaObBMASEBGRMrpJACwBEREpo5sEQERE
      yugmAbAERESkjG4SAEtARETK6CYBEBGRMqolALvdjo6ODgCAy+WCzWaD3W6HJEnehyn781s7
      S0BERMqo8jj7S5cuoba2Fg6HA2PHjkV5eTmioqIQGBiI+Ph41NfXIyIiAg0NDZg3b55f2nQ6
      nQgLC/NLLCKi4UCVBJCamorU1FTk5eXBbDbDbrcjMTERqamp6O7uRmtrK6qqqrB27VoAgNvt
      BgDIsgxZlvvV5lePLPxNkiQAYPybxFcrttbj62Fu1Y4/XOfWYDDAYBjaKrwqrUuShL/+9a9I
      Tk7GyJEjsWLFCsTGxuLTTz8FALS3t8NkMkEQBACA2WyG2Wwe0GCwBEREpIwqRwAnT55EUlIS
      LBYLuru7UVZWhuTkZBiNRgBAWloaLBYLCgoKMHPmTO/vCYLgfY9SbrcbJpMqH8eb4Rn/xkRR
      VC221uNrfW657fim9tgMBlV6PnbsWLS0tKCrqwuhoaFIS0vD5cuXcdddd8FisSAoKAihoaFo
      ampSo3kiIroFqiQAq9UKq9Xa57WIiAjv/wcEBAAAYmNj/dYmS0BERMro5joAXghGRKSMbhIA
      EREpo5sEwBIQEZEyukkALAERESmjmwRARETK6CYBsARERKSMbhIAS0BERMroJgEQEZEyukkA
      LAERESmjmwTAEhARkTK6SQBERKSMbhIAS0BERMroJgGwBEREpIxuEgARESmjmwTAEhARkTK6
      SQAsARERKaObBEBERMroJgGwBEREpIxuEgBLQEREyugmARARkTKqPBS+o6MDJ0+ehNvtRlZW
      Fpqbm1FaWorRo0cjISEBnZ2diIuLQ0lJCaZOneqXNlkCIiJSRpUjAI/Hg6ysLEybNg2lpaUo
      Li7GihUrUF5ejp6eHrS0tCAnJwcpKSl+a5MlICIiZVQ5ArBarairq8PJkyexZs0atLa2Arj2
      LV2WZZw8eRJpaWmIjIwEALjdbgCAJEnweDz9alMURdWSgCRJ3jYY/3pqjr3W42t9brnt+DbQ
      sTEajTCZVNkF3zJVWr9y5QrOnDmDe++9F4IgeHfqHo8HgiBgzpw5qKqqQldXF0JDQ2E2mwFc
      G0ij0divNoODg1UrA/X2X63J0np8p9OpaglOy/G1PrfcdnxTe2wGgyoloJqaGpjNZhw6dAgN
      DQ1ITk7Gvn37EB0dDbPZjJCQEKxatQqFhYV+a5MlICIiZQRZluWh7kSvgRwBtLS0IDo62s89
      ukbr37L4LW7o4mt9brnt+MYjgNsIVwERESmjmwTAEhARkTK6SQBERKSMbhIAS0BERMroJgGw
      BEREpIx2T19/3ed5aDxzVpXQMq4tlBIgMP4NSLIEg6Dedwktx9f63HLb8U2GDMFkhnXTj2CK
      ilSlDbXpJwGYTBAsAerE/vtKWUFQ549A6/EFSYJgUO+PWNPxNT633HZuQpYhmM0QDCqN/SDg
      dQC3QOtrrbmWe+jia31uue34xusAiIhIs3STALgKiIhIGd0kAK4CIiJSRjcJgIiIlNFNAmAJ
      iIhIGd0kAJaAiIiU0U0CICIiZXSTAFgCIiJSRjcJgCUgIiJldJMAiIhIGd0kAJaAiIiU0U0C
      YAmIiEgZ1RJAa2srWlpaAABXrlxBQUEBSkpK4HQ60d7eDgCora1Vq3kiIvoGqtzGrrGxEYWF
      hYiJiUF0dDSKi4sxZ84cGAwGdHZ2or6+HhcvXkRkpP/uoc0SEBGRMqokgLi4OMyfPx/l5eUA
      AIfDgVOnTmHUqFGIiIhAcXEx4uLiMGvWLACA2+0GAMiyjP7enbq7uxtBQUH++QBfI0kSgH/c
      /pXxr4+vVmytx9fD3Kodf7jOrcFggEHFZyHcUh8Go5G1a9di2bJlKCkpAQCkp6ejo6MDoigC
      AMxmM8xm85APBhHRcKLKEUBdXR3OnTuHpqYmxMbG4uLFizCbzd6fBwUFISsrC9nZ2Vi5cqX3
      dUEQ+v1AmODgYM0+FEPr8UVRVPWhGFqOr/W55bbjmx4eCDNoTwTr6emBxWK56aPl+EQwbcbX
      8lOd1I6v9bnltuObHhLAoPU8MDBwsJoiIqJboJuiO1cBEREpo5sEwAvBiIiU0U0CICIiZXST
      AFgCIiJSRjcJgCUgIiJldJMAiIhIGd0kAJaAiIiU0U0CYAmIiEgZ3SQAIiJSRjcJgCUgIiJl
      dJMAWAIiIlJGNwmAiIiU0U0CYAmIiEgZ3SQAloCIiJTRTQIgIiJldJMAWAIiIlJGNwmAJSAi
      ImV0kwCIiEgZ3SQAloCIiJTRTQJgCYiISBlVHgrf1dWFnJwcpKamYvLkySgoKEBraytCQkIw
      fvx4NDc3IyEhAefOncP8+fPV6AIREX0D1Y4A5s+f7/1W3tzcjBUrVsBms0EURTgcDuTk5GD2
      7NkAAFEUIYoiZFnud3ssARERKaPKEUBoaChEUfxHIyaT97+yLCM/Px9jxoyB2Wzu83uSJPW7
      lNPd3Y2AgID+d/omJEkCgD6fifH/QRRFVUtwWo6v9bnltuPbQMfGaDR6941DZVBa7+npgSzL
      cDgcEAQBs2fPRkdHB2pqajBy5EgYjUbve7/6/0oYjUbVjgI8Hg8AqDZZWo/vdDpVPQLTcnyt
      zy23Hd/UHpvBoEoJqK6uDkVFRejo6MDly5cxe/ZsHDhwAFOmTEFwcDDi4uKwaNEitLe3+61N
      loCIiJQR5IEU3v1MFMV+HwG0tLQgOjrazz26Ruvfsvgtbujia31uue34xiMAIiLSLN0kAJaA
      iIiU0U0C4IVgRETK6CYBEBGRMrpJACwBEREpo5sEwBIQEZEyukkARESkjG4SAEtARETK6CYB
      sARERKSMbhIAEREpo5sEwBIQEZEyukkALAERESmjmwRARETK6CYBsARERKSMbhIAS0BERMro
      JgEQEZEyukkALAERESmjmwTAEhARkTK6SQBERKSMbhIAS0BERMoMSgK4cuUKCgoKUFJSAqfT
      ifb2dgBAbW2t39pgCYiISJlBeZx9cXEx5syZA4PBgM7OTtTX1+PixYuIjIwcjOaJiOgGBiUB
      OBwOnDp1CqNGjUJERASKi4sRFxeHWbNmAQDcbjcAQJZlyLLcrzbMZjM8Ho/f+vxVkiQBAOPf
      JL5asbUeXw9zq3b84Tq3BoMBBsPQVuEHpfW1a9di2bJlKCkpAQCkp6ejo6MDoigCuLbzNpvN
      AxoMloCIiJQZlCOA3NxcmM1m77+DgoKQlZWF7OxsrFy50vu6IAgwGo39asNgMMBkUufj9GZ4
      xr8xURRVi631+FqfW247vqk9NoNBkPtbc1Gop6cHFosFgiD4fI8oiv1OADabDWFhYf3t3k1p
      /Y9M7fhOp1PVVVhajq/1ueW245seEsCgFaACAwNvuvMfKJaAiIiU0c11AEREpIxuEgAvBCMi
      UkY3CYAlICIiZXSTAIiISBndJACWgIiIlNFNAmAJiIhIGd0kACIiUkY3CYAlICIiZXSTAFgC
      IiJSRjcJgIiIlNFNAmAJiIhIGd0kAJaAiIiU0U0CICIiZXSTAFgCIiJSRjcJgCUgIiJlBiUB
      2O12HDlyBO3t7XA6nWhvbwcA1NbWDkbzRER0A4OSAHJzczFt2jQcPHgQnZ2dqK6uRn5+vl+/
      tbMERESkzKAkgKCgIISEhCAsLAyyLKO4uBhXr15FWlqa39pgCYiISJlBSQCSJAG49sxfQRCQ
      np6Ojo4OiKI4GM0TEdENDEoCsFgs+Pzzz73/DgoKQlZWFrKzs/3aBhER3TpBlmV5MBpyOBwI
      Cgq66XtEUYTRaOxX/JaWFkRHR/frd7+Jx+MBAJhMJsa/AafTqWoC1nJ8rc8ttx3f1B6bwTBo
      Pb/Zzr+3FDRIuYiIiDCICeBW9fe8QGBgoGrnFHoTk1bjS5IEg8Gg6jkXtc/naDW+2mOv5fiy
      LEMQBFX/rtSMP9CxEQQBBsPQXop1WySA/pZ9vspisfglzs1oNb4kSaoepkqSpOrYaDn+YIy9
      VuP3lnzVGnu146s99oNBN1cCExGRMoN2EpiIiG4vPAIgIhqmmACIiIYpbZ/B+LvDhw+ju7sb
      cXFxmDZtmt/i/t///R+ioqKQmpoKs9mMgoICCIKANWvWQBCEfsc9ceIEGhoacO+996KjowMH
      Dx4EAKxZswZnz55Fa2srQkJCsGDBAsWxXS4XDh06hODgYCxcuBCnT59GW1sbjEYjlixZggMH
      DsDtdmPcuHFIT09XHP/IkSOw2+1wu91YvXo1du3aBVmWMWfOHEiSNOAx+mr8NWvW+H0Ojhw5
      gp6eHng8HqxYscKv/W9qakJRURFcLhemTp2KlpYWv449APT09ODdd9/Fpk2b8OWXX6KiogIB
      AQFYtmyZ3+MXFRX5tf+7d+9GcHAwEhMTER8f79ft/uvxY2NjkZubi6ioKMyYMQMXL14cUPyO
      jg7k5eUhMDAQWVlZOHbsmHefM2HCBOzZswcAsHTpUoSFhfWr/0NC1jhJkuS9e/fKsix7/+sP
      LpdL3rdvn+zxeGRZluXPPvtMliRJPnPmjFxXVzeg2G1tbXJ2drYsy7Kcm5sr9/T0yLW1tfLZ
      s2cH/FkcDodst9u98fft2yc7HA5ZlmXZZrPJeXl5A4rvcrlkSZLknTt3ytXV1XJJSYksiqK8
      b98+v4zRV+OrNQcul0u1/suyLJeXl8uFhYV+H3tZvjafu3bt6rPdHzx4UG5pafF7fH/3f8+e
      PbLb7ZZl2f/b/dfjl5SUyBcvXpQlSeoTt7/xc3Jy5Pb2dtlut1+3zyksLJSvXLkid3d3y4cO
      Hep3/4eC5o8AJElCQEAAAP8uo5RlGeHh4cjOzkZMTAyMRiMEQUB4eDjsdvuAYkdGRnr/3+Px
      wGKxIDw8HDU1Nd5lZSaTybuOWYnAwMA+/05PT0dBQQFqa2uxePFihIeHA+j/WImiiN27d2PG
      jBmw2+0IDw+HwWDwrmke6Bh9Nb4ac9Da2oqcnBxYrVZV+n/s2DF8+eWXWL16NUaMGOHXsb94
      8SLi4+Nx5cqVPktXw8LC0NLS4vf4/t52oqKi8PnnnyMgIMDv2/3X448fPx7l5eUoKirCwoUL
      Bxy/s7MTpaWlaGhowJw5c/rsc3q3o6CgILhcLsX9HkqaPwfQOwGSJPn1jqC9h/FZWVloamqC
      IAiw2+2orq5GbGys39oZMWIEGhsbUVlZifj4ePT09ECWZTgcjgGVmXqFh4djwYIFsFqtCAoK
      QkNDA9xud78vXtm/fz+WLVuGlJQUxMXFoaqqCjabDSaTyS9j9NX4asyB2WzGd7/7XfT09CAm
      Jsav/e/q6sLcuXOxbt06FBYW+n3sBUGAzWZDdXU1ysrK4PF44PF40NjYiJSUFL/H92f/nU4n
      xo8fj6ysLHR0dPh9u/96fEEQMHfuXMyaNQtXrlwZcPzIyEhkZmZi6tSp6Ozs7LPPSUhIQGVl
      Jerq6hAVFaU49lDSxTLQqqoqfPnll5g+fTpiYmL8ErOnpwfHjx+Hx+PB3LlzERAQgLy8PMTE
      xAzoPIPH48HRo0fhdDoRERGBGTNm4PDhw7BYLJg3bx6amppw5swZZGRkYNSoUYrjt7a2oqSk
      BE6nE6NHj4Ysy7h8+TJiYmIwdepUXLhwATU1NfjWt77Vr1plXl6edwewZMkS7zmGO+64A7Is
      D3iMvhp/3rx5OHHihF/n4Pjx4+ju7kZ0dDSmTJmCwsJCv/W/qakJZ8+e9e586uvr/Tr2vS5d
      uoQxY8bAZrPh+PHjSElJQWZmpt/jl5eX+63/Ho8Hx48fh8PhwPTp0xEZGenX7f7r8WVZxpkz
      ZxAQEICFCxeiubl5QPHdbje++OILGI1GLFq0CNXV1d59TnR0NI4dOwa3241FixYN+dW9Sugi
      ARARkXLaSVVERORXTABERMMUEwAR0TDFBEBENEwxARARDVNMAERfI8syenp6hrobRKr7/0kS
      W/ZJAOzlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total Payment Discrepency' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
